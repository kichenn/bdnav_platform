<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bdxh.wallet.persistence.WalletConsumerMapper">

	<resultMap id="BaseResultMap" type="com.bdxh.wallet.entity.WalletConsumer">
	  <id column="id" jdbcType="BIGINT" property="id"/>
	  <result column="school_id" jdbcType="BIGINT" property="schoolId"/>
	  <result column="school_code" jdbcType="VARCHAR" property="schoolCode"/>
	  <result column="school_name" jdbcType="VARCHAR" property="schoolName"/>
	  <result column="user_id" jdbcType="BIGINT" property="userId"/>
	  <result column="user_name" jdbcType="VARCHAR" property="userName"/>
	  <result column="card_number" jdbcType="VARCHAR" property="cardNumber"/>
	  <result column="physical_number" jdbcType="VARCHAR" property="physicalNumber"/>
	  <result column="charge_detp_id" jdbcType="BIGINT" property="chargeDeptId"/>
	  <result column="device_number" jdbcType="VARCHAR" property="deviceNumber"/>
	  <result column="order_no" jdbcType="VARCHAR" property="orderNo"/>
	  <result column="out_order_no" jdbcType="VARCHAR" property="outOrderNo"/>
	  <result column="consumer_amount" jdbcType="DECIMAL" property="consumerAmount"/>
	  <result column="consumer_time" jdbcType="TIMESTAMP" property="consumerTime"/>
	  <result column="consumer_type" jdbcType="TINYINT" property="consumerType"/>
	  <result column="consumer_status" jdbcType="TINYINT" property="consumerStatus"/>
	  <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
	  <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
	  <result column="remark" jdbcType="VARCHAR" property="remark"/>
	</resultMap>

	<sql id="BaseColumns">
	  id,school_id,school_code,school_name,user_id,user_name,card_number,physical_number,charge_detp_id,device_number,order_no,out_order_no,consumer_amount,consumer_time,consumer_type,consumer_status,create_date,update_date,remark
	</sql>
	<select id="getWalletConsumerAllCount" resultType="Integer">
	  SELECT
	   COUNT(1)
	  FROM t_wallet_consumer
	</select>

	<!--分页+条件查询-->
    <select id="findWalletConsumerByCondition" resultMap="BaseResultMap">
	  SELECT
	   <include refid="BaseColumns"/>
	  FROM t_wallet_consumer
	  <where>
		  <if test="walletConsumerDto.schoolCode!=null and walletConsumerDto.schoolCode!=''">
			  AND school_code = #{walletConsumerDto.schoolCode}
		  </if>
		  <if test="walletConsumerDto.cardNumber!=null and walletConsumerDto.cardNumber!=''">
			  AND card_number = #{walletConsumerDto.cardNumber}
		  </if>
		  <if test="walletConsumerDto.physicalNumber!=null and walletConsumerDto.physicalNumber!=''">
			  AND physical_number = #{walletConsumerDto.physicalNumber}
		  </if>
		  <if test="walletConsumerDto.orderNo!=null and walletConsumerDto.orderNo!=''">
			  AND order_no = #{walletConsumerDto.orderNo}
		  </if>
		  <if test="walletConsumerDto.consumerType!=null ">
			  AND consumer_type = #{walletConsumerDto.consumerType}
		  </if>
		  <if test="walletConsumerDto.consumerStatus!=null ">
			  AND consumer_status = #{walletConsumerDto.consumerStatus}
		  </if>
		  <if test="walletConsumerDto.startTime!=null and walletConsumerDto.endTime!=null">
			  AND consumer_time = BETWEEN #{walletConsumerDto.startTime} AND #{walletConsumerDto.endTime}
		  </if>
	  </where>
	  ORDER BY create_date DESC
	</select>

	<!--根据平台订单号查询单条消费记录-->
	<select id="findWalletConsumerById" resultMap="BaseResultMap">
		SELECT
		<include refid="BaseColumns"/>
		FROM t_wallet_consumer
		WHERE school_code = #{schoolCode} AND card_number = #{cardNumber} AND order_no = #{orderNo}
	</select>

	<!--根据订单号多条消费记录查询-->
    <select id="findWalletConsumerByOrderNos" resultMap="BaseResultMap">
		SELECT
		<include refid="BaseColumns"/>
		FROM t_wallet_consumer
		WHRER order_no IN
		<foreach collection="orderNos" item="orderNo" separator="," open="(" close=")" >
			#{orderNo}
		</foreach>
	</select>

    <delete id="delWalletConsumerInIds" parameterType="Integer">
	  DELETE
	   FROM t_wallet_consumer
	  WHERE
	   id IN
	     <foreach collection = "ids" item = "id" separator = "," open = "(" close = ")" >
	          #{id, jdbcType = BIGINT}
	     </foreach >
	</delete>

</mapper>
